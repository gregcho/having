{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from \"axios\";\nimport authHeader from '../services/auth-header';\nimport UserService from '../services/user.service';\nexport default {\n  data: () => ({\n    dialog: false,\n    dialogDelete: false,\n    selected: [],\n    headers: [{\n      text: '품목',\n      align: 'start',\n      sortable: false,\n      value: 'NAME'\n    }, {\n      text: '기준수량',\n      value: 'gijun_count'\n    }, {\n      text: '재고',\n      value: 'count'\n    }, {\n      text: '발주수량',\n      value: 'order_count'\n    }, {\n      text: '가격',\n      value: 'price'\n    }, {\n      text: 'Actions',\n      value: 'actions',\n      sortable: false\n    }],\n    desserts: [],\n    editedIndex: -1,\n    editedItem: {\n      NAME: '',\n      gijun_count: 0,\n      count: 0,\n      order_count: 0,\n      price: 0\n    },\n    items: [],\n    defaultItem: {\n      name: '',\n      calories: 0,\n      fat: 0,\n      carbs: 0,\n      protein: 0\n    },\n    content: ''\n  }),\n  computed: {\n    currentUser() {\n      console.log(this.$store.state.auth.user);\n      if (this.$store.state.auth.user == null) {\n        return true;\n      } else {\n        return false;\n      }\n    },\n    formTitle() {\n      return this.editedIndex === -1 ? 'New Item' : 'Edit Item';\n    }\n  },\n  watch: {\n    dialog(val) {\n      val || this.close();\n    },\n    dialogDelete(val) {\n      val || this.closeDelete();\n    }\n  },\n  created() {},\n  beforeMount() {\n    console.log('before mount');\n    this.getInitData();\n  },\n  mounted() {\n    UserService.getUserBoard().then(response => {\n      console.log('mount');\n      console.log(response.data);\n      this.content = response.data;\n    }, error => {\n      console.log('mount error');\n      this.content = '로그인 필요';\n      console.log('mo1');\n    });\n  },\n  methods: {\n    createSnackBar(error) {\n      this.snackbar = true;\n      this.text = error, this.timeout = 2000;\n    },\n    getInitData() {\n      //검색 함수\n      axios.get(\"parts/store\", {\n        headers: authHeader()\n      }).then(res => {\n        console.log('part/store');\n        var b_items = res.data;\n        this.items = b_items;\n        let isProgress = false;\n        for (var i = 0; i < res.data.length; i++) {\n          //console.log(\"data ::\");\n          //console.log(res.data[i]);\n          if (res.data[i].status == 0) {\n            isProgress = true;\n            break;\n          }\n        }\n        if (!isProgress) {\n          console.log('InterVal 종료');\n          clearInterval(this.interval);\n        }\n      }).catch(error => {\n        this.createSnackBar('서버에러');\n        alert(error);\n      }).finally(() => {});\n    },\n    editItem(item) {\n      this.editedIndex = this.items.indexOf(item);\n      this.editedItem = Object.assign({}, item);\n      this.dialog = true;\n    },\n    deleteItem(item) {\n      this.editedIndex = this.items.indexOf(item);\n      this.editedItem = Object.assign({}, item);\n      this.dialogDelete = true;\n    },\n    deleteItemConfirm() {\n      this.desserts.splice(this.editedIndex, 1);\n      this.closeDelete();\n    },\n    close() {\n      this.dialog = false;\n      this.$nextTick(() => {\n        this.editedItem = Object.assign({}, this.defaultItem);\n        this.editedIndex = -1;\n      });\n    },\n    closeDelete() {\n      this.dialogDelete = false;\n      this.$nextTick(() => {\n        this.editedItem = Object.assign({}, this.defaultItem);\n        this.editedIndex = -1;\n      });\n    },\n    save(title) {\n      console.log('save', title);\n      console.log('save1', this.editedItem);\n      if (this.editedIndex > -1) {\n        Object.assign(this.items[this.editedIndex], this.editedItem);\n      } else {\n        this.items.push(this.editedItem);\n      }\n      if (title == 'New Item') {\n        axios.get(\"parts/insertWareHouse\", {\n          headers: authHeader(),\n          params: {\n            'count': this.editedItem.count,\n            'gijun_count': this.editedItem.gijun_count,\n            'order_count': this.editedItem.order_count,\n            'NAME': this.editedItem.NAME,\n            'PRICE': this.editedItem.pr\n          }\n        }).then(res => {\n          this.getInitData();\n          this.period = false;\n        }).catch(error => {\n          this.createSnackBar('서버에러');\n          console.log(\"error\");\n          console.log(\"error:\", error);\n        }).finally(() => {\n          console.log(\"finally\");\n        });\n      } else {\n        axios.get(\"parts/updateWareHouse\", {\n          headers: authHeader(),\n          params: {\n            'count': this.editedItem.count,\n            'itemcode': this.editedItem.CODE\n          }\n        }).then(res => {\n          this.getInitData();\n          this.period = false;\n        }).catch(error => {\n          this.createSnackBar('서버에러');\n          console.log(\"error\");\n          console.log(\"error:\", error);\n        }).finally(() => {\n          console.log(\"finally\");\n        });\n      }\n      this.close();\n    }\n  }\n};","map":{"version":3,"names":["axios","authHeader","UserService","data","dialog","dialogDelete","selected","headers","text","align","sortable","value","desserts","editedIndex","editedItem","NAME","gijun_count","count","order_count","price","items","defaultItem","name","calories","fat","carbs","protein","content","computed","currentUser","console","log","$store","state","auth","user","formTitle","watch","val","close","closeDelete","created","beforeMount","getInitData","mounted","getUserBoard","then","response","error","methods","createSnackBar","snackbar","timeout","get","res","b_items","isProgress","i","length","status","clearInterval","interval","catch","alert","finally","editItem","item","indexOf","Object","assign","deleteItem","deleteItemConfirm","splice","$nextTick","save","title","push","params","pr","period","CODE"],"sources":["src/views/OrderView.vue"],"sourcesContent":["<template>\r\n  <v-container class=\"pa-15 mb-15\">\r\n    <div v-if=\"currentUser\">\r\n      <header class=\"jumbotron\">\r\n        <h3>{{content}}</h3>\r\n      </header>\r\n    </div>\r\n    <div v-else>\r\n      <v-data-table\r\n        v-model=\"selected\"\r\n        :headers=\"headers\"\r\n        :items=\"items\"\r\n        sort-by=\"품목\"\r\n        class=\"elevation-1\"\r\n      >\r\n        <template v-slot:top>\r\n          <v-toolbar flat>\r\n            <v-toolbar-title>재고관리</v-toolbar-title>\r\n            <v-divider class=\"mx-4\" inset vertical></v-divider>\r\n            <v-spacer></v-spacer>\r\n            <v-dialog v-model=\"dialog\" max-width=\"500px\">\r\n              <template v-slot:activator=\"{ on, attrs }\">\r\n                <v-btn\r\n                  color=\"primary\"\r\n                  dark\r\n                  class=\"mb-2\"\r\n                  v-bind=\"attrs\"\r\n                  v-on=\"on\"\r\n                >\r\n                  New Item\r\n                </v-btn>\r\n              </template>\r\n              <v-card>\r\n                <v-card-title>\r\n                  <span class=\"text-h5\">{{ formTitle }}</span>\r\n                </v-card-title>\r\n\r\n                <v-card-text>\r\n                  <v-container>\r\n                    <v-row>\r\n                      <v-col cols=\"12\" sm=\"6\" md=\"4\">\r\n                        <v-text-field\r\n                          v-model=\"editedItem.NAME\"\r\n                          label=\"품목\"\r\n                        ></v-text-field>\r\n                      </v-col>\r\n                      <v-col cols=\"12\" sm=\"6\" md=\"4\">\r\n                        <v-text-field\r\n                          v-model=\"editedItem.gijun_count\"\r\n                          label=\"기준수량\"\r\n                        ></v-text-field>\r\n                      </v-col>\r\n                      <v-col cols=\"12\" sm=\"6\" md=\"4\">\r\n                        <v-text-field\r\n                          v-model=\"editedItem.count\"\r\n                          label=\"재고\"\r\n                        ></v-text-field>\r\n                      </v-col>\r\n                      <v-col cols=\"12\" sm=\"6\" md=\"4\">\r\n                        <v-text-field\r\n                          v-model=\"editedItem.order_count\"\r\n                          label=\"발주수량\"\r\n                        ></v-text-field>\r\n                      </v-col>\r\n                      <v-col cols=\"12\" sm=\"6\" md=\"4\">\r\n                        <v-text-field\r\n                          v-model=\"editedItem.price\"\r\n                          label=\"가격\"\r\n                        ></v-text-field>\r\n                      </v-col>\r\n                    </v-row>\r\n                  </v-container>\r\n                </v-card-text>\r\n\r\n                <v-card-actions>\r\n                  <v-spacer></v-spacer>\r\n                  <v-btn color=\"blue darken-1\" text @click=\"close\">\r\n                    Cancel\r\n                  </v-btn>\r\n                  <v-btn color=\"blue darken-1\" text @click=\"save(formTitle)\">\r\n                    Save\r\n                  </v-btn>\r\n                </v-card-actions>\r\n              </v-card>\r\n            </v-dialog>\r\n            <v-dialog v-model=\"dialogDelete\" max-width=\"500px\">\r\n              <v-card>\r\n                <v-card-title class=\"text-h5\"\r\n                  >Are you sure you want to delete this item?</v-card-title\r\n                >\r\n                <v-card-actions>\r\n                  <v-spacer></v-spacer>\r\n                  <v-btn color=\"blue darken-1\" text @click=\"closeDelete\"\r\n                    >Cancel</v-btn\r\n                  >\r\n                  <v-btn color=\"blue darken-1\" text @click=\"deleteItemConfirm\"\r\n                    >OK</v-btn\r\n                  >\r\n                  <v-spacer></v-spacer>\r\n                </v-card-actions>\r\n              </v-card>\r\n            </v-dialog>\r\n          </v-toolbar>\r\n        </template>\r\n        <template v-slot:item.actions=\"{ item }\">\r\n          <v-icon small class=\"mr-2\" @click=\"editItem(item)\">\r\n            mdi-pencil\r\n          </v-icon>\r\n          <v-icon small @click=\"deleteItem(item)\"> mdi-delete </v-icon>\r\n        </template>\r\n        \r\n      </v-data-table>\r\n    </div>\r\n  </v-container>\r\n</template>\r\n<script>\r\nimport axios from \"axios\";\r\nimport authHeader from '../services/auth-header';\r\nimport UserService from '../services/user.service';\r\n\r\nexport default {\r\n    data: () => ({\r\n      dialog: false,\r\n      dialogDelete: false,\r\n      selected:[],\r\n      headers: [\r\n        {\r\n          text: '품목',\r\n          align: 'start',\r\n          sortable: false,\r\n          value: 'NAME',\r\n        },\r\n        { text: '기준수량', value: 'gijun_count' },\r\n        { text: '재고', value: 'count' },\r\n        { text: '발주수량', value: 'order_count' },\r\n        { text: '가격', value: 'price' },\r\n        { text: 'Actions', value: 'actions', sortable: false },\r\n      ],\r\n      desserts: [],\r\n      editedIndex: -1,\r\n      editedItem: {\r\n        NAME: '',\r\n        gijun_count: 0,\r\n        count: 0,\r\n        order_count: 0,\r\n        price: 0\r\n      },\r\n      items:[],\r\n      defaultItem: {\r\n        name: '',\r\n        calories: 0,\r\n        fat: 0,\r\n        carbs: 0,\r\n        protein: 0,\r\n      },\r\n      content: ''\r\n    }),\r\n    computed: {\r\n      currentUser() {\r\n      console.log(this.$store.state.auth.user)\r\n        if(this.$store.state.auth.user==null){\r\n          return true;\r\n        }else{\r\n          return false;\r\n        }\r\n      },\r\n      formTitle () {\r\n        return this.editedIndex === -1 ? 'New Item' : 'Edit Item'\r\n      },\r\n    },\r\n    watch: {\r\n      dialog (val) {\r\n        val || this.close()\r\n      },\r\n      dialogDelete (val) {\r\n        val || this.closeDelete()\r\n      },\r\n    },\r\n\r\n    created () {\r\n    },\r\n    beforeMount(){\r\n      console.log('before mount')\r\n      this.getInitData()\r\n    },\r\n    mounted() {\r\n      UserService.getUserBoard().then(\r\n        response => {\r\n          console.log('mount')\r\n          console.log(response.data)\r\n          this.content = response.data;\r\n        },\r\n        error => {\r\n          console.log('mount error')\r\n          this.content =\r\n          '로그인 필요';\r\n          console.log('mo1')\r\n        }\r\n      );\r\n    },\r\n    methods: {\r\n      createSnackBar(error){\r\n        this.snackbar = true\r\n        this.text= error,\r\n        this.timeout= 2000\r\n      },\r\n      getInitData(){  //검색 함수\r\n      axios\r\n      .get(\"parts/store\", { headers: authHeader() })\r\n        .then((res) => {\r\n          console.log('part/store')\r\n          var b_items = (res.data);\r\n\r\n          this.items = b_items;\r\n          let isProgress = false;\r\n          for(var i = 0; i < res.data.length; i++){\r\n            //console.log(\"data ::\");\r\n            //console.log(res.data[i]);\r\n            if(res.data[i].status == 0){\r\n              isProgress = true;\r\n              break;\r\n            }\r\n          }\r\n          if(!isProgress){\r\n            console.log('InterVal 종료')\r\n            clearInterval(this.interval);\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          this.createSnackBar('서버에러');\r\n          alert(error);\r\n        })\r\n        .finally(() => {\r\n        })\r\n      },\r\n      editItem (item) {\r\n        this.editedIndex = this.items.indexOf(item)\r\n        this.editedItem = Object.assign({}, item)\r\n        this.dialog = true\r\n      },\r\n\r\n      deleteItem (item) {\r\n        this.editedIndex = this.items.indexOf(item)\r\n        this.editedItem = Object.assign({}, item)\r\n        this.dialogDelete = true\r\n      },\r\n\r\n      deleteItemConfirm () {\r\n        this.desserts.splice(this.editedIndex, 1)\r\n        this.closeDelete()\r\n      },\r\n\r\n      close () {\r\n        this.dialog = false\r\n        this.$nextTick(() => {\r\n          this.editedItem = Object.assign({}, this.defaultItem)\r\n          this.editedIndex = -1\r\n        })\r\n      },\r\n\r\n      closeDelete () {\r\n        this.dialogDelete = false\r\n        this.$nextTick(() => {\r\n          this.editedItem = Object.assign({}, this.defaultItem)\r\n          this.editedIndex = -1\r\n        })\r\n      },\r\n      save(title) {\r\n        console.log('save',title)\r\n        console.log('save1', this.editedItem)\r\n        \r\n        if (this.editedIndex > -1) {\r\n          Object.assign(this.items[this.editedIndex], this.editedItem)\r\n        } else {\r\n          this.items.push(this.editedItem)\r\n        }\r\n        if (title == 'New Item'){\r\n          axios\r\n          .get(\"parts/insertWareHouse\",{\r\n            headers: authHeader(),\r\n            params:{\r\n              'count':this.editedItem.count,\r\n              'gijun_count':this.editedItem.gijun_count,\r\n              'order_count':this.editedItem.order_count,\r\n              'NAME':this.editedItem.NAME,\r\n              'PRICE':this.editedItem.pr\r\n            }\r\n          })\r\n          .then((res) => {\r\n            this.getInitData();\r\n            this.period = false;\r\n          })\r\n          .catch((error) => {\r\n            this.createSnackBar('서버에러');\r\n            console.log(\"error\");\r\n            console.log(\"error:\",error);\r\n          })\r\n          .finally(() => {\r\n            console.log(\"finally\");\r\n          })\r\n        }else{\r\n          axios\r\n          .get(\"parts/updateWareHouse\",{\r\n            headers: authHeader(),\r\n            params:{\r\n              'count':this.editedItem.count,\r\n              'itemcode':this.editedItem.CODE\r\n            }\r\n          })\r\n          .then((res) => {\r\n            this.getInitData();\r\n            this.period = false;\r\n          })\r\n          .catch((error) => {\r\n            this.createSnackBar('서버에러');\r\n            console.log(\"error\");\r\n            console.log(\"error:\",error);\r\n          })\r\n          .finally(() => {\r\n            console.log(\"finally\");\r\n          })\r\n        }\r\n        this.close()\r\n      },\r\n    },\r\n  }\r\n</script>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}