{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport UserService from '../services/user.service';\nexport default {\n  name: 'User',\n  data() {\n    return {\n      text: '',\n      timeout: 2000,\n      snackbar: false,\n      interval: null,\n      imgFile: null,\n      showUploadForm: false,\n      //팝업\n      dialog: false,\n      //업로드팝업\n      period_dialog: false,\n      //조회조건\n      searchFileName: \"\",\n      yearModel: \"\",\n      ocrmedia_id: {\n        type: '전체',\n        value: \"\"\n      },\n      searchOcrIdItems: [],\n      //시작일, 종료일 속성\n      s_date: new Date(Date.now() - new Date().getTimezoneOffset() * 60000).toISOString().substr(0, 10),\n      e_date: new Date(Date.now() - new Date().getTimezoneOffset() * 60000).toISOString().substr(0, 10),\n      //selection menu\n      select: {\n        type: '일반문서',\n        format: 'full_text'\n      },\n      doc_type_items: [],\n      //팝업\n      menu: false,\n      //시작일\n      menu2: false,\n      //종료일\n      period: false,\n      //보관기간 변경 팝업\n\n      //Data table 속성\n      singleSelect: true,\n      selected_model: [],\n      selected: [],\n      headers: [{\n        text: '차종',\n        align: 'start',\n        sortable: false,\n        value: 'car_model'\n      }, {\n        text: '엔진타입',\n        value: 'engine_type',\n        width: '10%'\n      }, {\n        text: '모델',\n        value: 'model',\n        width: '10%'\n      }, {\n        text: '년식',\n        value: 'year_model'\n      }, {\n        text: '오일4L,6L 가격',\n        value: 'oil_4_6_price',\n        width: '9%'\n      }, {\n        text: '오일1L 가격',\n        value: 'oil_1_price',\n        width: '5%'\n      }, {\n        text: '오일1L 수량',\n        value: 'oil_1_qty',\n        width: '7%'\n      }, {\n        text: '필터가격',\n        value: 'filter_price'\n      }, {\n        text: '에어클리너 가격',\n        value: 'aircleaner_price',\n        width: '9%'\n      }, {\n        text: '공임',\n        value: 'labor_cost'\n      }\n\n      // { text: 'OCR', value: 'status' },\n      // { text: '보관만료일', value: 'keep_expire_date' },\n      ],\n\n      selected_headers: [{\n        text: '차종',\n        align: 'start',\n        sortable: false,\n        value: 'car_model'\n      }, {\n        text: '엔진타입',\n        value: 'engine_type'\n      }, {\n        text: '모델',\n        value: 'model'\n      }, {\n        text: '년식',\n        value: 'year_model'\n      }, {\n        text: '총가격(VAT포함)',\n        value: 'sum'\n      }, {\n        text: '공임',\n        value: 'labor_cost'\n      }, {\n        text: '오일',\n        value: 'oil_4_6_price'\n      }, {\n        text: '오일필터',\n        value: 'filter_price'\n      }, {\n        text: '에어클리너',\n        value: 'aircleaner_price'\n      }\n\n      // { text: 'OCR', value: 'status' },\n      // { text: '보관만료일', value: 'keep_expire_date' },\n      ],\n\n      items: [],\n      selected_items: [],\n      b_items: [],\n      pagecnt: 0,\n      filepath: '',\n      filename: '',\n      content: ''\n    };\n  },\n  methods: {\n    getImage(stauts) {\n      //OCR 상태 아이콘 Load\n      //console.log(\"img : \" + stauts);\n      var rtn = \"\";\n      var images = require.context('../assets/', false, /\\.png$/);\n      if (stauts == 99) {\n        return images('./' + \"done.png\");\n      } else {\n        return images('./' + \"progress.png\");\n      }\n      return rtn;\n    },\n    show(event, {\n      item\n    }) {\n      //뷰어 show\n\n      var nowDate = new Date();\n      nowDate = nowDate.getFullYear().toString() + (nowDate.getMonth() + 1).toString() + nowDate.getDate().toString();\n      //console.log(nowDate);\n      //console.log(item.keep_expire_date)\n      this.filename = item.filename;\n    },\n    getData() {\n      //검색 함수\n      console.log('getData=>', this.ocrmedia_id.value);\n      axios.get(\"/ocr/document\", {\n        params: {\n          \"e_date\": this.e_date,\n          \"s_date\": this.s_date,\n          \"filename\": this.searchFileName,\n          \"ocrmedia_id\": this.ocrmedia_id.value\n        }\n      }).then(res => {\n        //var b_items = this.getOcrMediaName(res.data);\n\n        this.items = res.data;\n\n        //https://v15.vuetifyjs.com/ko/components/data-tables/ 아이콘\n        let isProgress = false;\n        for (var i = 0; i < res.data.length; i++) {\n          if (res.data[i].status == 0) {\n            //console.log('res.data[i].status', res.data[i].status)\n            isProgress = true;\n            break;\n          }\n        }\n        if (!isProgress) {\n          console.log('InterVal 종료');\n          clearInterval(this.interval);\n        }\n      }).catch(error => {\n        console.log('error');\n        this.createSnackBar('서버에러');\n        alert(error);\n      }).finally(() => {\n        console.log('finally');\n      });\n    },\n    getInitData() {\n      //검색 함수\n      axios.get(\"/ocr/document\").then(res => {\n        var b_items = res.data;\n        this.items = b_items;\n        let isProgress = false;\n        for (var i = 0; i < res.data.length; i++) {\n          //console.log(\"data ::\");\n          //console.log(res.data[i]);\n          if (res.data[i].status == 0) {\n            isProgress = true;\n            break;\n          }\n        }\n        if (!isProgress) {\n          console.log('InterVal 종료');\n          clearInterval(this.interval);\n        }\n      }).catch(error => {\n        this.createSnackBar('서버에러');\n        alert(error);\n      }).finally(() => {});\n    },\n    getOcrMediaName(data) {\n      var b_items = data;\n      for (var i = 0; i < data.length; i++) {\n        if (data[i].ocrmedia_id.includes('CODE1PRI')) {\n          b_items[i].ocrmedia_id = '개인정보';\n        } else if (data[i].ocrmedia_id.includes('CODE1FIN')) {\n          b_items[i].ocrmedia_id = '지문정보';\n        } else if (data[i].ocrmedia_id.includes('CODE1WRP')) {\n          b_items[i].ocrmedia_id = '일반문서';\n        } else if (data[i].ocrmedia_id.includes('CODE1IDS')) {\n          b_items[i].ocrmedia_id = '신분증';\n        } else if (data[i].ocrmedia_id.includes('CODE1PAS')) {\n          b_items[i].ocrmedia_id = '여권';\n        } else if (data[i].ocrmedia_id.includes('CODE1CRD')) {\n          b_items[i].ocrmedia_id = '신용카드';\n        } else if (data[i].ocrmedia_id.includes('CODE1CAR')) {\n          b_items[i].ocrmedia_id = '자동차번호판';\n        } else if (data[i].ocrmedia_id.includes('CODE1ODO')) {\n          b_items[i].ocrmedia_id = '자동차주행거리';\n        } else if (data[i].ocrmedia_id.includes('CODE1GAS')) {\n          b_items[i].ocrmedia_id = '가스미터계량기';\n        } else if (data[i].ocrmedia_id.includes('CODE1BUL')) {\n          b_items[i].ocrmedia_id = '사업자등록증';\n        } else if (data[i].ocrmedia_id.includes('CODE1REC')) {\n          b_items[i].ocrmedia_id = '영수증';\n        } else if (data[i].ocrmedia_id.includes('CODE1POR')) {\n          b_items[i].ocrmedia_id = '우편물반송';\n        } else if (data[i].ocrmedia_id.includes('CODE1PWM')) {\n          b_items[i].ocrmedia_id = '전력계량기';\n        }\n      }\n      return b_items;\n    },\n    periodChange() {\n      //기간변경 함수\n      axios.get(\"/ocr/updatePeriod\", {\n        params: {\n          doc_keep_period: this.period_dialog\n        }\n      }).then(res => {\n        this.getData();\n        this.period = false;\n      }).catch(error => {\n        this.createSnackBar('서버에러');\n        console.log(\"error\");\n        console.log(\"error:\", error);\n      }).finally(() => {\n        console.log(\"finally\");\n      });\n    },\n    deleteDoc() {\n      //선택삭제 함수\n      var seqArr = \"\";\n      for (var i = 0; i < this.selected.length; i++) {\n        seqArr += this.selected[i].seq + \",\";\n      }\n      console.log(seqArr);\n      if (confirm(\"삭제하시겠습니까?\")) {\n        axios.get(\"/ocr/deleteDoc\", {\n          params: {\n            seqArr: seqArr\n          }\n        }).then(res => {\n          this.getData();\n        }).catch(error => {\n          this.createSnackBar('서버에러');\n          console.log(\"error\");\n          console.log(\"error:\", error);\n        }).finally(() => {\n          console.log(\"finally\");\n        });\n      }\n    },\n    upload_btn() {\n      //upload 함수  code1ocr_document\n      var fd = new FormData();\n      var params = {\n        \"ocr_filepath\": this.e_date,\n        \"ocr_system_id\": 'OCR_WEB',\n        \"ocr_user_id\": 'admin',\n        \"ocr_mediaName\": this.select.type,\n        \"ocr_result_format\": this.select.format,\n        \"file_name\": this.imgFile.name,\n        \"binary\": this.imgFile\n      };\n      console.log(\"params :  \" + params);\n      console.log(params);\n      axios.post(\"/ocr/uploadDoc\", params, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      }).then(res => {\n        this.uploadApi(res.data);\n        this.getData();\n        this.dialog = false;\n      }).catch(error => {\n        this.createSnackBar('서버에러');\n        console.log(\"error\");\n        console.log(\"error:\", error);\n      }).finally(() => {\n        console.log(\"finally\");\n      });\n    },\n    uploadApi(data) {\n      let params = data;\n      console.log(\"Upload API 호출\");\n      console.log(params);\n      params = {\n        \"uuid\": params.uuid,\n        \"ocr_filepath\": params.ocr_filepath,\n        \"ocr_system_id\": 'OCR_WEB',\n        \"ocr_user_id\": 'admin',\n        \"ocr_result_format\": params.ocr_result_format,\n        \"ocr_doc_type\": params.ocr_doc_type\n      };\n      console.log(\"upload api params:\", params);\n      axios.post(\"/code1-api/image-ocr\", params, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      }).then(res => {\n        console.log(\"성공\");\n      }).catch(error => {\n        this.createSnackBar('서버에러');\n        console.log(\"error:\", error);\n      }).finally(() => {\n        console.log(\"finally\");\n      });\n    },\n    getPeriod() {\n      //보관기간 Select 함수\n      axios.get(\"/ocr/period\").then(res => {\n        console.log(\"period ::: \" + res.data);\n        this.period_dialog = res.data.toString();\n        this.getOcrMediaId();\n      }).catch(error => {\n        this.createSnackBar('서버에러');\n        console.log(\"error:\", error);\n      }).finally(() => {\n        console.log(\"finally\");\n      });\n    },\n    getOcrMediaId() {\n      //문서형식 Select\n      axios.get(\"/ocr/ocrmediaid\").then(res => {\n        console.log(\"getOcrMediaId ::: \" + res.data);\n        console.log(res.data);\n        this.searchOcrIdItems = [];\n        this.searchOcrIdItems.push({\n          type: '전체',\n          value: \"\"\n        });\n        for (var item of res.data) {\n          console.log(item);\n          this.searchOcrIdItems.push(item);\n        }\n        this.doc_type_items = res.data;\n        this.getInitData();\n        this.interval = setInterval(() => {\n          this.getInitData();\n        }, 10000);\n      }).catch(error => {\n        this.createSnackBar('서버에러');\n        console.log(\"error:\", error);\n      }).finally(() => {\n        console.log(\"finally\");\n      });\n    },\n    createSnackBar(error) {\n      this.snackbar = true;\n      this.text = error, this.timeout = 2000;\n    }\n  },\n  components: {},\n  beforeMount() {\n    // DB에 저장된 보관기간을 가져온다.\n    // 보관기간을 가져오면서 OCR Status 체크하여 상태창을 변경한다.\n    this.getInitData();\n    // this.getPeriod()\n    console.log(\"before mount\");\n  },\n  mounted() {\n    UserService.getUserBoard().then(response => {\n      this.content = response.data;\n    }, error => {\n      this.content = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n    });\n  }\n};","map":{"version":3,"names":["UserService","name","data","text","timeout","snackbar","interval","imgFile","showUploadForm","dialog","period_dialog","searchFileName","yearModel","ocrmedia_id","type","value","searchOcrIdItems","s_date","Date","now","getTimezoneOffset","toISOString","substr","e_date","select","format","doc_type_items","menu","menu2","period","singleSelect","selected_model","selected","headers","align","sortable","width","selected_headers","items","selected_items","b_items","pagecnt","filepath","filename","content","methods","getImage","stauts","rtn","images","require","context","show","event","item","nowDate","getFullYear","toString","getMonth","getDate","getData","console","log","axios","get","params","then","res","isProgress","i","length","status","clearInterval","catch","error","createSnackBar","alert","finally","getInitData","getOcrMediaName","includes","periodChange","doc_keep_period","deleteDoc","seqArr","seq","confirm","upload_btn","fd","FormData","post","uploadApi","uuid","ocr_filepath","ocr_result_format","ocr_doc_type","getPeriod","getOcrMediaId","push","setInterval","components","beforeMount","mounted","getUserBoard","response","message"],"sources":["src/views/PricingView.vue"],"sourcesContent":["<template>\r\n  <v-container class=\"pa-13 mb-13\">\r\n    <v-row>\r\n      <v-col sm=\"4\" class=\"ma-4\">\r\n        <h2>부품 가격조회</h2>\r\n      </v-col>\r\n    </v-row>\r\n    <v-row class=\"ml-1\">\r\n      <!-- 파일명 -->\r\n      <v-col cols=\"4\" class=\"pa-1 ma-1\">\r\n        <v-text-field v-model=\"searchFileName\" label=\"모델\" outlined dense @keyup.enter=\"getData()\">\r\n        </v-text-field>\r\n      </v-col>\r\n      <v-col cols=\"4\" class=\"pa-1 ma-1\">\r\n        <v-text-field v-model=\"yearModel\" label=\"년식\" outlined dense>\r\n        </v-text-field>\r\n      </v-col>\r\n\r\n      <!-- 검색버튼  -->\r\n      <v-col cols=\"auto\" class=\"pa-1 ma-1\">\r\n      <v-btn  color=\"primary\" @click=\"getData\" ref=\"search\">\r\n        <span>검색</span>\r\n      </v-btn>\r\n      </v-col>\r\n    </v-row>\r\n    <!-- 데이터 테이블 -->\r\n    <!-- 참고: https://vuetifyjs.com/en/components/data-tables/#misc -->\r\n    <!-- 종류: Row Selection -->\r\n    <v-col>\r\n      <v-data-table\r\n        v-model=\"selected_model\"\r\n        :headers=\"selected_headers\"\r\n        :items=\"selected_items\"\r\n        item-key=\"idx\"\r\n        show-select\r\n        class=\"elevation-1\"\r\n        @click:row=\"show\"\r\n      >\r\n        <template v-slot:item.status=\"{ item }\">\r\n          <v-img\r\n            max-height=\"20\"\r\n            max-width=\"20\"\r\n            :src=\"getImage(item.status)\"\r\n          ></v-img>\r\n        </template>\r\n      </v-data-table>\r\n    </v-col>\r\n    <!-- 데이터 테이블 -->\r\n    <!-- 참고: https://vuetifyjs.com/en/components/data-tables/#misc -->\r\n    <!-- 종류: Row Selection -->\r\n    <v-col>\r\n      <v-data-table\r\n        v-model=\"selected\"\r\n        :headers=\"headers\"\r\n        :items=\"items\"\r\n        item-key=\"idx\"\r\n        show-select\r\n        class=\"elevation-1\"\r\n        @click:row=\"show\"\r\n      >\r\n      </v-data-table>\r\n    </v-col>\r\n    <v-row>\r\n      <v-btn class=\"ma-6\" color=\"primary\" @click=\"\">\r\n        <span>부품 추가</span>\r\n      </v-btn>\r\n    </v-row>\r\n    <v-snackbar\r\n      v-model=\"snackbar\"\r\n      :timeout=\"timeout\"\r\n    >\r\n      {{ text }}\r\n      <template v-slot:action=\"{ attrs }\">\r\n        <v-btn\r\n          color=\"blue\"\r\n          text\r\n          v-bind=\"attrs\"\r\n          @click=\"snackbar = false\"\r\n        >\r\n          Close\r\n        </v-btn>\r\n      </template>\r\n    </v-snackbar>\r\n  </v-container>\r\n  \r\n</template>\r\n\r\n<script>\r\nimport UserService from '../services/user.service';\r\n\r\nexport default {\r\n  name: 'User',\r\n  data() {\r\n    \r\n    return {\r\n      text:'',\r\n      timeout:2000,\r\n      snackbar: false,\r\n      interval:null,\r\n      imgFile: null,\r\n      showUploadForm: false,\r\n      //팝업\r\n      dialog: false,  //업로드팝업\r\n      period_dialog: false,\r\n      //조회조건\r\n      searchFileName: \"\",\r\n      yearModel: \"\",\r\n      ocrmedia_id: {type: '전체', value:\"\"},\r\n      searchOcrIdItems: [],\r\n      //시작일, 종료일 속성\r\n      s_date: (new Date(Date.now() - (new Date()).getTimezoneOffset() * 60000)).toISOString().substr(0, 10),\r\n      e_date: (new Date(Date.now() - (new Date()).getTimezoneOffset() * 60000)).toISOString().substr(0, 10),\r\n      //selection menu\r\n      select: {type: '일반문서', format: 'full_text'},\r\n      doc_type_items: [],\r\n      //팝업\r\n      menu: false,  //시작일\r\n      menu2: false, //종료일\r\n      period: false,  //보관기간 변경 팝업\r\n\r\n      //Data table 속성\r\n      singleSelect: true,\r\n      selected_model: [],\r\n      selected: [],\r\n      headers: [\r\n        { text: '차종', align:'start', sortable: false, value: 'car_model'},\r\n        { text: '엔진타입', value: 'engine_type', width: '10%'},\r\n        { text: '모델', value: 'model', width: '10%'},\r\n        { text: '년식', value: 'year_model' },\r\n        { text: '오일4L,6L 가격', value: 'oil_4_6_price', width: '9%'},\r\n        { text: '오일1L 가격', value: 'oil_1_price', width: '5%'},\r\n        { text: '오일1L 수량', value: 'oil_1_qty', width: '7%'},\r\n        { text: '필터가격', value: 'filter_price' },\r\n        { text: '에어클리너 가격', value: 'aircleaner_price', width: '9%'},\r\n        { text: '공임', value: 'labor_cost' }\r\n\r\n        // { text: 'OCR', value: 'status' },\r\n        // { text: '보관만료일', value: 'keep_expire_date' },\r\n      ],\r\n      selected_headers: [\r\n        { text: '차종', align:'start', sortable: false, value: 'car_model'},\r\n        { text: '엔진타입', value: 'engine_type' },\r\n        { text: '모델', value: 'model' },\r\n        { text: '년식', value: 'year_model' },\r\n        { text: '총가격(VAT포함)', value: 'sum' },\r\n        { text: '공임', value: 'labor_cost' },\r\n        { text: '오일', value: 'oil_4_6_price' },\r\n        { text: '오일필터', value: 'filter_price' },\r\n        { text: '에어클리너', value: 'aircleaner_price' },\r\n\r\n        // { text: 'OCR', value: 'status' },\r\n        // { text: '보관만료일', value: 'keep_expire_date' },\r\n      ],\r\n      items: [],\r\n      selected_items: [],\r\n      b_items: [],\r\n      pagecnt:0,\r\n      filepath:'',\r\n      filename:'',\r\n      content: ''\r\n    };\r\n  },\r\n  methods: {\r\n    getImage(stauts){ //OCR 상태 아이콘 Load\r\n        //console.log(\"img : \" + stauts);\r\n        var rtn = \"\";\r\n        var images = require.context('../assets/', false, /\\.png$/)\r\n        if(stauts == 99){\r\n          return images('./' + \"done.png\")\r\n        } else {\r\n          return images('./' + \"progress.png\")\r\n        }\r\n        return rtn;\r\n    },\r\n\r\n    show(event, {item}) {//뷰어 show\r\n      \r\n      var nowDate = new Date();\r\n      nowDate = nowDate.getFullYear().toString() + (nowDate.getMonth() + 1).toString() + nowDate.getDate().toString();\r\n      //console.log(nowDate);\r\n      //console.log(item.keep_expire_date)\r\n      this.filename = item.filename\r\n    },\r\n\r\n    getData(){  //검색 함수\r\n      console.log('getData=>', this.ocrmedia_id.value);\r\n      axios\r\n        .get(\"/ocr/document\",{\r\n          params:{\r\n            \"e_date\": this.e_date,\r\n            \"s_date\": this.s_date,\r\n            \"filename\": this.searchFileName,\r\n            \"ocrmedia_id\": this.ocrmedia_id.value\r\n          }\r\n        })\r\n        .then((res) => {\r\n          //var b_items = this.getOcrMediaName(res.data);\r\n\r\n          this.items = res.data;\r\n\r\n          //https://v15.vuetifyjs.com/ko/components/data-tables/ 아이콘\r\n          let isProgress = false;\r\n          for(var i = 0; i < res.data.length; i++){\r\n            if(res.data[i].status == 0){\r\n              //console.log('res.data[i].status', res.data[i].status)\r\n              isProgress = true;\r\n              break;\r\n            }\r\n          }\r\n          if(!isProgress){\r\n            console.log('InterVal 종료')\r\n            clearInterval(this.interval);\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log('error')\r\n          this.createSnackBar('서버에러');\r\n          alert(error);\r\n        })\r\n        .finally(() => {\r\n          console.log('finally')\r\n        })\r\n    },\r\n\r\n    getInitData(){  //검색 함수\r\n    axios\r\n      .get(\"/ocr/document\")\r\n        .then((res) => {\r\n          \r\n          var b_items = (res.data);\r\n          \r\n          this.items = b_items;\r\n          let isProgress = false;\r\n          for(var i = 0; i < res.data.length; i++){\r\n            //console.log(\"data ::\");\r\n            //console.log(res.data[i]);\r\n            if(res.data[i].status == 0){\r\n              isProgress = true;\r\n              break;\r\n            }\r\n          }\r\n          if(!isProgress){\r\n            console.log('InterVal 종료')\r\n            clearInterval(this.interval);\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          this.createSnackBar('서버에러');\r\n          alert(error);\r\n        })\r\n        .finally(() => {\r\n        })\r\n    },\r\n\r\n    getOcrMediaName(data){\r\n      var b_items = data;\r\n      for(var i = 0; i < data.length; i++){\r\n          if(data[i].ocrmedia_id.includes('CODE1PRI')){\r\n            b_items[i].ocrmedia_id = '개인정보'\r\n          }else if(data[i].ocrmedia_id.includes('CODE1FIN')){\r\n            b_items[i].ocrmedia_id = '지문정보'\r\n          }else if(data[i].ocrmedia_id.includes('CODE1WRP')){\r\n            b_items[i].ocrmedia_id = '일반문서'\r\n          }else if(data[i].ocrmedia_id.includes('CODE1IDS')){\r\n            b_items[i].ocrmedia_id = '신분증'\r\n          }else if(data[i].ocrmedia_id.includes('CODE1PAS')){\r\n            b_items[i].ocrmedia_id = '여권'\r\n          }else if(data[i].ocrmedia_id.includes('CODE1CRD')){\r\n            b_items[i].ocrmedia_id = '신용카드'\r\n          }else if(data[i].ocrmedia_id.includes('CODE1CAR')){\r\n            b_items[i].ocrmedia_id = '자동차번호판'\r\n          }else if(data[i].ocrmedia_id.includes('CODE1ODO')){\r\n            b_items[i].ocrmedia_id = '자동차주행거리'\r\n          }else if(data[i].ocrmedia_id.includes('CODE1GAS')){\r\n            b_items[i].ocrmedia_id = '가스미터계량기'\r\n          }else if(data[i].ocrmedia_id.includes('CODE1BUL')){\r\n            b_items[i].ocrmedia_id = '사업자등록증'\r\n          }else if(data[i].ocrmedia_id.includes('CODE1REC')){\r\n            b_items[i].ocrmedia_id = '영수증'\r\n          }else if(data[i].ocrmedia_id.includes('CODE1POR')){\r\n            b_items[i].ocrmedia_id = '우편물반송'\r\n          }else if(data[i].ocrmedia_id.includes('CODE1PWM')){\r\n            b_items[i].ocrmedia_id = '전력계량기'\r\n          }\r\n        }\r\n\r\n        return b_items\r\n    },\r\n    periodChange(){ //기간변경 함수\r\n      axios\r\n        .get(\"/ocr/updatePeriod\",{\r\n          params:{\r\n            doc_keep_period: this.period_dialog\r\n          }\r\n        })\r\n        .then((res) => {\r\n          this.getData();\r\n          this.period = false;\r\n        })\r\n        .catch((error) => {\r\n          this.createSnackBar('서버에러');\r\n          console.log(\"error\");\r\n          console.log(\"error:\",error);\r\n        })\r\n        .finally(() => {\r\n          console.log(\"finally\");\r\n        })\r\n    },\r\n\r\n    deleteDoc(){  //선택삭제 함수\r\n      var seqArr = \"\";\r\n      for(var i = 0; i < this.selected.length; i++){\r\n        seqArr += this.selected[i].seq + \",\";\r\n      }\r\n      console.log(seqArr);\r\n      if(confirm(\"삭제하시겠습니까?\")){\r\n        axios\r\n        .get(\"/ocr/deleteDoc\",{\r\n          params:{\r\n            seqArr: seqArr\r\n          }\r\n        })\r\n        .then((res) => {\r\n          this.getData();\r\n        })\r\n        .catch((error) => {\r\n          this.createSnackBar('서버에러');\r\n          console.log(\"error\");\r\n          console.log(\"error:\",error);\r\n        })\r\n        .finally(() => {\r\n          console.log(\"finally\");\r\n        })\r\n      }\r\n    },\r\n\r\n    upload_btn(){  //upload 함수  code1ocr_document\r\n      var fd = new FormData();\r\n      var params = {\r\n              \"ocr_filepath\": this.e_date,\r\n              \"ocr_system_id\": 'OCR_WEB',\r\n              \"ocr_user_id\": 'admin',\r\n              \"ocr_mediaName\": this.select.type,\r\n              \"ocr_result_format\":this.select.format,\r\n              \"file_name\": this.imgFile.name,\r\n              \"binary\": this.imgFile\r\n            }\r\n            console.log(\"params :  \" + params)\r\n            console.log(params)\r\n        axios\r\n          .post(\"/ocr/uploadDoc\", params, {\r\n              headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n              }\r\n            })\r\n          .then((res) => {\r\n            this.uploadApi(res.data);\r\n            this.getData();\r\n            this.dialog = false;\r\n          })\r\n          .catch((error) => {\r\n            this.createSnackBar('서버에러');\r\n            console.log(\"error\");\r\n            console.log(\"error:\",error);\r\n          })\r\n          .finally(() => {\r\n            console.log(\"finally\");\r\n          })\r\n      },\r\n\r\n      uploadApi(data){\r\n        let params = data;\r\n        console.log(\"Upload API 호출\");\r\n        console.log(params);\r\n        params = {\r\n              \"uuid\":params.uuid,\r\n              \"ocr_filepath\": params.ocr_filepath,\r\n              \"ocr_system_id\": 'OCR_WEB',\r\n              \"ocr_user_id\": 'admin',\r\n              \"ocr_result_format\":params.ocr_result_format,\r\n              \"ocr_doc_type\":params.ocr_doc_type,\r\n            }\r\n        console.log(\"upload api params:\", params)\r\n        axios\r\n          .post(\"/code1-api/image-ocr\", params, {\r\n              headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n              }\r\n            })\r\n          .then((res) => {\r\n            console.log(\"성공\");\r\n          })\r\n          .catch((error) => {\r\n            this.createSnackBar('서버에러');\r\n            console.log(\"error:\",error);\r\n          })\r\n          .finally(() => {\r\n            console.log(\"finally\");\r\n          })\r\n      },\r\n\r\n      getPeriod(){  //보관기간 Select 함수\r\n        axios\r\n        .get(\"/ocr/period\")\r\n        .then((res) => {\r\n          console.log(\"period ::: \" + res.data)\r\n          this.period_dialog = res.data.toString();\r\n          this.getOcrMediaId();\r\n        })\r\n        .catch((error) => {\r\n          this.createSnackBar('서버에러');\r\n          console.log(\"error:\",error);\r\n        })\r\n        .finally(() => {\r\n          console.log(\"finally\");\r\n        })\r\n      },\r\n\r\n      getOcrMediaId(){  //문서형식 Select\r\n        axios\r\n        .get(\"/ocr/ocrmediaid\")\r\n        .then((res) => {\r\n          console.log(\"getOcrMediaId ::: \" + res.data)\r\n          console.log(res.data);\r\n          this.searchOcrIdItems = []\r\n          this.searchOcrIdItems.push({type:'전체', value:\"\"})\r\n          for(var item of res.data){\r\n            console.log(item);\r\n            this.searchOcrIdItems.push(item);\r\n          }\r\n          this.doc_type_items = res.data;\r\n          this.getInitData();\r\n          this.interval = setInterval(() => {this.getInitData()}, 10000)\r\n        })\r\n        .catch((error) => {\r\n          this.createSnackBar('서버에러');\r\n          console.log(\"error:\",error);\r\n        })\r\n        .finally(() => {\r\n          console.log(\"finally\");\r\n        })\r\n      },\r\n      createSnackBar(error){\r\n        this.snackbar = true\r\n        this.text= error,\r\n        this.timeout= 2000\r\n      }\r\n\r\n  },\r\n  components: {\r\n\r\n  },\r\n  beforeMount(){\r\n    // DB에 저장된 보관기간을 가져온다.\r\n    // 보관기간을 가져오면서 OCR Status 체크하여 상태창을 변경한다.\r\n    this.getInitData()\r\n    // this.getPeriod()\r\n    console.log(\"before mount\")\r\n  },\r\n  mounted() {\r\n    UserService.getUserBoard().then(\r\n      response => {\r\n        this.content = response.data;\r\n      },\r\n      error => {\r\n        this.content =\r\n          (error.response && error.response.data && error.response.data.message) ||\r\n          error.message ||\r\n          error.toString();\r\n      }\r\n    );\r\n  }\r\n};\r\n</script>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}