{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from \"axios\";\nimport authHeader from \"../services/auth-header\";\nexport default {\n  data() {\n    return {\n      loading: false,\n      snackbar: false,\n      text: \"\",\n      timeout: 2000,\n      page: 1,\n      itemsPerPage: 10,\n      totalItems: 0,\n      items: [],\n      filters: {\n        supplier: \"\",\n        region: \"\",\n        productName: \"\"\n      },\n      supplierSuggestions: [],\n      regionSuggestions: [],\n      productSuggestions: [],\n      headers: [{\n        text: \"ID\",\n        value: \"idx\"\n      }, {\n        text: \"Supplier\",\n        value: \"Supplier\"\n      }, {\n        text: \"Region\",\n        value: \"Region\"\n      }, {\n        text: \"Product Name\",\n        value: \"ProductName\"\n      }, {\n        text: \"Status\",\n        value: \"status\",\n        sortable: false\n      }]\n    };\n  },\n  created() {\n    this.getData();\n  },\n  methods: {\n    getSupplierSuggestions(query) {\n      console.log(query);\n      // query 값이 빈 문자열이면 아무 작업도 하지 않음\n      if (!query) {\n        this.supplierSuggestions = []; // 빈 목록 초기화\n        return;\n      }\n      this.loading = true;\n      axios.get(\"/parts/supplier-suggestions\", {\n        params: {\n          query: `%${query}%`\n        } // 와일드카드 검색어 사용\n      }).then(response => {\n        // 받아온 데이터를 추천 목록에 저장\n        console.log(\"1\");\n        this.supplierSuggestions = response.data;\n      }).catch(error => {\n        console.error(\"공급자 추천을 가져오는 데 오류가 발생했습니다:\", error);\n      }).finally(() => {\n        this.loading = false;\n      });\n    },\n    getRegionSuggestions(query) {\n      console.log(\"getRegionSuggestions\");\n      if (query.length >= 2) {\n        console.log(\"call\");\n        axios.get(\"/parts/region-suggestions\", {\n          headers: authHeader(),\n          params: {\n            query\n          }\n        }).then(response => {\n          this.regionSuggestions = response.data.suggestions;\n        }).catch(error => {\n          this.createSnackBar(\"서버에러: \" + error.message);\n        });\n      } else {\n        this.regionSuggestions = [];\n      }\n    },\n    getProductSuggestions(query) {\n      console.log(\"getProductSuggestions\");\n      if (query.length >= 2) {\n        axios.get(\"/parts/product-suggestions\", {\n          headers: authHeader(),\n          params: {\n            query\n          }\n        }).then(response => {\n          this.productSuggestions = response.data.suggestions;\n        }).catch(error => {\n          this.createSnackBar(\"서버에러: \" + error.message);\n        });\n      } else {\n        this.productSuggestions = [];\n      }\n    },\n    pageChanged(newPage) {\n      this.page = newPage;\n      this.getData(); // Re-fetch data when page changes\n    },\n\n    itemsPerPageChanged(newItemsPerPage) {\n      this.itemsPerPage = newItemsPerPage;\n      this.getData(); // Re-fetch data when items per page changes\n    },\n\n    navigateToDetail(item) {\n      this.$router.push({\n        name: 'DetailPage',\n        params: {\n          item: JSON.stringify(item)\n        }\n      });\n    },\n    getData() {\n      this.loading = true;\n      axios.get(\"/parts/search\", {\n        headers: authHeader(),\n        params: {\n          page: this.page,\n          itemsPerPage: this.itemsPerPage,\n          ...this.filters\n        }\n      }).then(response => {\n        this.items = response.data.data;\n        this.totalItems = response.data.total;\n      }).catch(error => {\n        this.createSnackBar(\"서버에러: \" + error.message);\n      }).finally(() => {\n        this.loading = false;\n      });\n    },\n    createSnackBar(message) {\n      this.snackbar = true;\n      this.text = message;\n    }\n  },\n  computed: {\n    currentUser() {\n      return !!this.$store.state.auth.user;\n    }\n  },\n  watch: {\n    'filters.supplier'(newValue) {\n      console.log('Supplier filter value changed:', newValue); // 값 변경 시 콘솔에 출력\n    }\n  }\n};","map":{"version":3,"names":["axios","authHeader","data","loading","snackbar","text","timeout","page","itemsPerPage","totalItems","items","filters","supplier","region","productName","supplierSuggestions","regionSuggestions","productSuggestions","headers","value","sortable","created","getData","methods","getSupplierSuggestions","query","console","log","get","params","then","response","catch","error","finally","getRegionSuggestions","length","suggestions","createSnackBar","message","getProductSuggestions","pageChanged","newPage","itemsPerPageChanged","newItemsPerPage","navigateToDetail","item","$router","push","name","JSON","stringify","total","computed","currentUser","$store","state","auth","user","watch","filters.supplier","newValue"],"sources":["src/views/PricingView.vue"],"sourcesContent":["<template>\r\n  <v-container class=\"pa-13 mb-13\">\r\n    <div v-if=\"!currentUser\">\r\n      <header class=\"jumbotron\">\r\n        <h3>{{ content }}</h3>\r\n      </header>\r\n    </div>\r\n    <div v-else>\r\n      <!-- 검색 필터 -->\r\n      <v-row class=\"align-center\">\r\n        <v-col cols=\"3\">\r\n          <v-text-field\r\n            v-model=\"inputMsg\"\r\n            filled\r\n            outlined\r\n            rounded\r\n            dense\r\n            @focus=\"autoSearchList = true\"\r\n          ></v-text-field>\r\n          <transition name=\"top-slide\" mode=\"in-out\">\r\n            <div class=\"justify-center align-center flex-column d-flex\">\r\n              <v-list class=\"pa-0 ma-0 search-list\" v-show=\"autoSearchList\" light>\r\n                <v-list-item-group>\r\n                  \r\n                  // 마우스 오버 시 효과를 주기위한 v-hover\r\n                  <v-hover v-slot=\"{ hover }\"\r\n                          v-for=\"(item,index) in completeData\"\r\n                          :key=\"index\" \r\n                  >   \r\n                  \r\n                    // 자동완성 결과값들의 리스트\r\n                    <v-list-item\r\n                        class=\"pa-3 pl-5 top-list\"\r\n                        :class=\"{ 'on-hover': hover }\"\r\n                        @click=\"inputMsg=item.bookTitle\"\r\n                  >\r\n                      \r\n                      //내용들\r\n                      <v-card\r\n                          class=\"search-list-img\"\r\n                          elevation=\"1\"\r\n                          tile\r\n                      >\r\n                        <img\r\n                            :src=\"item.bookThumb\"\r\n                            alt=\"bookThumb\"\r\n                            height=\"100%\"\r\n                            @click=\"detailView(item.bid)\"\r\n                        >\r\n                      </v-card>\r\n                      \r\n                      <v-list-item-content class=\"pl-8\">\r\n                        <v-list-item-title>\r\n                          <span class=\"search-list-title\" @click=\"detailView(item.bid)\"> {{item.bookTitle}} </span>\r\n                        </v-list-item-title>\r\n                        <v-list-item-subtitle class=\"pt-2\">\r\n                          <span class=\"search-list-subtitle\"> {{ item.bookAuthor }} | {{item.bookPublisher}}</span>\r\n                        </v-list-item-subtitle>\r\n                      </v-list-item-content>\r\n\r\n                    </v-list-item>\r\n                  </v-hover>\r\n\r\n                </v-list-item-group>\r\n              </v-list>\r\n            </div>\r\n          </transition>\r\n        </v-col>\r\n        <v-col cols=\"3\">\r\n          <v-autocomplete\r\n            v-model=\"filters.region\"\r\n            :items=\"regionSuggestions\"\r\n            label=\"Region\"\r\n            outlined\r\n            dense\r\n            @input=\"getRegionSuggestions\"\r\n            @keyup.enter=\"getData\"\r\n            item-text=\"name\"\r\n            item-value=\"id\"\r\n            no-data-text=\"No regions found\"\r\n          ></v-autocomplete>\r\n        </v-col>\r\n        <v-col cols=\"3\">\r\n          <v-autocomplete\r\n            v-model=\"filters.productName\"\r\n            :items=\"productSuggestions\"\r\n            label=\"Product Name\"\r\n            outlined\r\n            dense\r\n            @input=\"getProductSuggestions\"\r\n            @keyup.enter=\"getData\"\r\n            item-text=\"name\"\r\n            item-value=\"id\"\r\n            no-data-text=\"No products found\"\r\n          ></v-autocomplete>\r\n        </v-col>\r\n        <v-col cols=\"3\">\r\n          <v-btn color=\"primary\" @click=\"getData\">\r\n            검색\r\n          </v-btn>\r\n        </v-col>\r\n      </v-row>\r\n\r\n      <!-- 데이터 테이블 -->\r\n      <v-data-table\r\n        :headers=\"headers\"\r\n        :items=\"items\"\r\n        :loading=\"loading\"\r\n        :page.sync=\"page\"\r\n        :items-per-page=\"itemsPerPage\"\r\n        :server-items-length=\"totalItems\"\r\n        item-key=\"idx\"\r\n        show-select\r\n        class=\"elevation-1\"\r\n        @click:row=\"navigateToDetail\"\r\n        @update:page=\"pageChanged\"\r\n        @update:items-per-page=\"itemsPerPageChanged\"\r\n      >\r\n      </v-data-table>\r\n\r\n      <!-- 알림 스낵바 -->\r\n      <v-snackbar v-model=\"snackbar\" :timeout=\"timeout\">\r\n        {{ text }}\r\n        <template v-slot:action=\"{ attrs }\">\r\n          <v-btn color=\"blue\" text v-bind=\"attrs\" @click=\"snackbar = false\">\r\n            Close\r\n          </v-btn>\r\n        </template>\r\n      </v-snackbar>\r\n    </div>\r\n  </v-container>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\nimport authHeader from \"../services/auth-header\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      loading: false,\r\n      snackbar: false,\r\n      text: \"\",\r\n      timeout: 2000,\r\n      page: 1,\r\n      itemsPerPage: 10,\r\n      totalItems: 0,\r\n      items: [],\r\n      filters: {\r\n        supplier: \"\",\r\n        region: \"\",\r\n        productName: \"\",\r\n      },\r\n      supplierSuggestions: [],\r\n      regionSuggestions: [],\r\n      productSuggestions: [],\r\n      headers: [\r\n        { text: \"ID\", value: \"idx\" },\r\n        { text: \"Supplier\", value: \"Supplier\" },\r\n        { text: \"Region\", value: \"Region\" },\r\n        { text: \"Product Name\", value: \"ProductName\" },\r\n        { text: \"Status\", value: \"status\", sortable: false },\r\n      ],\r\n    };\r\n  },\r\n  created() {\r\n    this.getData();\r\n  },\r\n  methods: {\r\n    getSupplierSuggestions(query) {\r\n      console.log(query)\r\n      // query 값이 빈 문자열이면 아무 작업도 하지 않음\r\n      if (!query) {\r\n        this.supplierSuggestions = [];  // 빈 목록 초기화\r\n        return;\r\n      }\r\n      this.loading = true;\r\n      axios\r\n        .get(\"/parts/supplier-suggestions\", {\r\n          params: { query: `%${query}%` }  // 와일드카드 검색어 사용\r\n        })\r\n        .then(response => {\r\n          // 받아온 데이터를 추천 목록에 저장\r\n          console.log(\"1\")\r\n          this.supplierSuggestions = response.data; \r\n        })\r\n        .catch(error => {\r\n          console.error(\"공급자 추천을 가져오는 데 오류가 발생했습니다:\", error);\r\n        })\r\n        .finally(() => {\r\n          this.loading = false;\r\n        });\r\n    },\r\n    getRegionSuggestions(query) {\r\n      console.log(\"getRegionSuggestions\")\r\n      if (query.length >= 2) {\r\n        console.log(\"call\")\r\n        axios\r\n          .get(\"/parts/region-suggestions\", {\r\n            headers: authHeader(),\r\n            params: { query },\r\n          })\r\n          .then((response) => {\r\n            this.regionSuggestions = response.data.suggestions;\r\n          })\r\n          .catch((error) => {\r\n            this.createSnackBar(\"서버에러: \" + error.message);\r\n          });\r\n      } else {\r\n        this.regionSuggestions = [];\r\n      }\r\n    },\r\n    getProductSuggestions(query) {\r\n      console.log(\"getProductSuggestions\")\r\n      if (query.length >= 2) {\r\n        axios\r\n          .get(\"/parts/product-suggestions\", {\r\n            headers: authHeader(),\r\n            params: { query },\r\n          })\r\n          .then((response) => {\r\n            this.productSuggestions = response.data.suggestions;\r\n          })\r\n          .catch((error) => {\r\n            this.createSnackBar(\"서버에러: \" + error.message);\r\n          });\r\n      } else {\r\n        this.productSuggestions = [];\r\n      }\r\n    },\r\n    pageChanged(newPage) {\r\n      this.page = newPage;\r\n      this.getData(); // Re-fetch data when page changes\r\n    },\r\n    itemsPerPageChanged(newItemsPerPage) {\r\n      this.itemsPerPage = newItemsPerPage;\r\n      this.getData(); // Re-fetch data when items per page changes\r\n    },\r\n    navigateToDetail(item) {\r\n      this.$router.push({\r\n        name: 'DetailPage',\r\n        params: { item: JSON.stringify(item) },\r\n      });\r\n    },\r\n    getData() {\r\n      this.loading = true;\r\n      axios\r\n        .get(\"/parts/search\", {\r\n          headers: authHeader(),\r\n          params: {\r\n            page: this.page,\r\n            itemsPerPage: this.itemsPerPage,\r\n            ...this.filters,\r\n          },\r\n        })\r\n        .then((response) => {\r\n          this.items = response.data.data;\r\n          this.totalItems = response.data.total;\r\n        })\r\n        .catch((error) => {\r\n          this.createSnackBar(\"서버에러: \" + error.message);\r\n        })\r\n        .finally(() => {\r\n          this.loading = false;\r\n        });\r\n    },\r\n    createSnackBar(message) {\r\n      this.snackbar = true;\r\n      this.text = message;\r\n    },\r\n  },\r\n  \r\n  computed: {\r\n    currentUser() {\r\n      return !!this.$store.state.auth.user;\r\n    },\r\n  },\r\n  watch: {\r\n  'filters.supplier'(newValue) {\r\n    console.log('Supplier filter value changed:', newValue);  // 값 변경 시 콘솔에 출력\r\n  }\r\n}\r\n};\r\n</script>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}