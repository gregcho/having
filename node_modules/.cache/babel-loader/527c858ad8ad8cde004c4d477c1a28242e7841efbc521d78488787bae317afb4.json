{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from \"axios\";\nimport authHeader from \"../services/auth-header\";\nexport default {\n  data() {\n    return {\n      loading: false,\n      snackbar: false,\n      text: \"\",\n      timeout: 2000,\n      page: 1,\n      itemsPerPage: 10,\n      totalItems: 0,\n      items: [],\n      filters: {\n        supplier: \"\",\n        region: \"\",\n        productName: \"\"\n      },\n      headers: [{\n        text: \"ID\",\n        value: \"idx\"\n      }, {\n        text: \"Supplier\",\n        value: \"Supplier\"\n      }, {\n        text: \"Region\",\n        value: \"Region\"\n      }, {\n        text: \"Product Name\",\n        value: \"ProductName\"\n      }, {\n        text: \"Status\",\n        value: \"status\",\n        sortable: false\n      }]\n    };\n  },\n  created() {\n    this.getData();\n  },\n  methods: {\n    pageChanged(newPage) {\n      this.page = newPage;\n      this.getData(); // Re-fetch data when page changes\n    },\n\n    itemsPerPageChanged(newItemsPerPage) {\n      this.itemsPerPage = newItemsPerPage;\n      this.getData(); // Re-fetch data when items per page changes\n    },\n\n    navigateToDetail(item) {\n      this.$router.push({\n        name: 'DetailPage',\n        params: {\n          item: JSON.stringify(item)\n        }\n      });\n    },\n    getData() {\n      this.loading = true;\n      axios.get(\"/parts/search\", {\n        headers: authHeader(),\n        params: {\n          page: this.page,\n          itemsPerPage: this.itemsPerPage,\n          ...this.filters\n        }\n      }).then(response => {\n        this.items = response.data.data;\n        this.totalItems = response.data.total;\n      }).catch(error => {\n        this.createSnackBar(\"서버에러: \" + error.message);\n      }).finally(() => {\n        this.loading = false;\n      });\n    },\n    getImage(status) {\n      const images = require.context(\"../assets\", false, /\\.png$/);\n      return status === 99 ? images(\"./done.png\") : images(\"./progress.png\");\n    },\n    createSnackBar(message) {\n      this.snackbar = true;\n      this.text = message;\n    }\n  },\n  computed: {\n    currentUser() {\n      return !!this.$store.state.auth.user;\n    }\n  }\n};","map":{"version":3,"names":["axios","authHeader","data","loading","snackbar","text","timeout","page","itemsPerPage","totalItems","items","filters","supplier","region","productName","headers","value","sortable","created","getData","methods","pageChanged","newPage","itemsPerPageChanged","newItemsPerPage","navigateToDetail","item","$router","push","name","params","JSON","stringify","get","then","response","total","catch","error","createSnackBar","message","finally","getImage","status","images","require","context","computed","currentUser","$store","state","auth","user"],"sources":["src/views/PricingView.vue"],"sourcesContent":["<template>\r\n  <v-container class=\"pa-13 mb-13\">\r\n    <div v-if=\"!currentUser\">\r\n      <header class=\"jumbotron\">\r\n        <h3>{{ content }}</h3>\r\n      </header>\r\n    </div>\r\n    <div v-else>\r\n      <!-- 검색 필터 -->\r\n      <v-row class=\"align-center\">\r\n        <v-col cols=\"3\">\r\n          <v-autocomplete\r\n            v-model=\"filters.supplier\"\r\n            :items=\"supplierSuggestions\"\r\n            label=\"Supplier\"\r\n            outlined\r\n            dense\r\n            @input=\"getSupplierSuggestions\"\r\n            @keyup.enter=\"getData\"\r\n            item-text=\"name\"\r\n            item-value=\"id\"\r\n            no-data-text=\"No suppliers found\"\r\n          ></v-autocomplete>\r\n        </v-col>\r\n        <v-col cols=\"3\">\r\n          <v-autocomplete\r\n            v-model=\"filters.region\"\r\n            :items=\"regionSuggestions\"\r\n            label=\"Region\"\r\n            outlined\r\n            dense\r\n            @input=\"getRegionSuggestions\"\r\n            @keyup.enter=\"getData\"\r\n            item-text=\"name\"\r\n            item-value=\"id\"\r\n            no-data-text=\"No regions found\"\r\n          ></v-autocomplete>\r\n        </v-col>\r\n        <v-col cols=\"3\">\r\n          <v-autocomplete\r\n            v-model=\"filters.productName\"\r\n            :items=\"productSuggestions\"\r\n            label=\"Product Name\"\r\n            outlined\r\n            dense\r\n            @input=\"getProductSuggestions\"\r\n            @keyup.enter=\"getData\"\r\n            item-text=\"name\"\r\n            item-value=\"id\"\r\n            no-data-text=\"No products found\"\r\n          ></v-autocomplete>\r\n        </v-col>\r\n        <v-col cols=\"3\">\r\n          <v-btn color=\"primary\" @click=\"getData\">\r\n            검색\r\n          </v-btn>\r\n        </v-col>\r\n      </v-row>\r\n\r\n      <!-- 데이터 테이블 -->\r\n      <v-data-table\r\n        :headers=\"headers\"\r\n        :items=\"items\"\r\n        :loading=\"loading\"\r\n        :page.sync=\"page\"\r\n        :items-per-page=\"itemsPerPage\"\r\n        :server-items-length=\"totalItems\"\r\n        item-key=\"idx\"\r\n        show-select\r\n        class=\"elevation-1\"\r\n        @click:row=\"navigateToDetail\"\r\n        @update:page=\"pageChanged\"\r\n        @update:items-per-page=\"itemsPerPageChanged\"\r\n      >\r\n      </v-data-table>\r\n\r\n      <!-- 알림 스낵바 -->\r\n      <v-snackbar v-model=\"snackbar\" :timeout=\"timeout\">\r\n        {{ text }}\r\n        <template v-slot:action=\"{ attrs }\">\r\n          <v-btn color=\"blue\" text v-bind=\"attrs\" @click=\"snackbar = false\">\r\n            Close\r\n          </v-btn>\r\n        </template>\r\n      </v-snackbar>\r\n    </div>\r\n  </v-container>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\nimport authHeader from \"../services/auth-header\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      loading: false,\r\n      snackbar: false,\r\n      text: \"\",\r\n      timeout: 2000,\r\n      page: 1,\r\n      itemsPerPage: 10,\r\n      totalItems: 0,\r\n      items: [],\r\n      filters: {\r\n        supplier: \"\",\r\n        region: \"\",\r\n        productName: \"\",\r\n      },\r\n      headers: [\r\n        { text: \"ID\", value: \"idx\" },\r\n        { text: \"Supplier\", value: \"Supplier\" },\r\n        { text: \"Region\", value: \"Region\" },\r\n        { text: \"Product Name\", value: \"ProductName\" },\r\n        { text: \"Status\", value: \"status\", sortable: false },\r\n      ],\r\n    };\r\n  },\r\n  created() {\r\n    this.getData();\r\n  },\r\n  methods: {\r\n    pageChanged(newPage) {\r\n      this.page = newPage;\r\n      this.getData(); // Re-fetch data when page changes\r\n    },\r\n    itemsPerPageChanged(newItemsPerPage) {\r\n      this.itemsPerPage = newItemsPerPage;\r\n      this.getData(); // Re-fetch data when items per page changes\r\n    },\r\n    navigateToDetail(item) {\r\n      this.$router.push({\r\n        name: 'DetailPage',\r\n        params: { item: JSON.stringify(item) },\r\n      });\r\n    },\r\n    getData() {\r\n      this.loading = true;\r\n      axios\r\n        .get(\"/parts/search\", {\r\n          headers: authHeader(),\r\n          params: {\r\n            page: this.page,\r\n            itemsPerPage: this.itemsPerPage,\r\n            ...this.filters,\r\n          },\r\n        })\r\n        .then((response) => {\r\n          this.items = response.data.data;\r\n          this.totalItems = response.data.total;\r\n        })\r\n        .catch((error) => {\r\n          this.createSnackBar(\"서버에러: \" + error.message);\r\n        })\r\n        .finally(() => {\r\n          this.loading = false;\r\n        });\r\n    },\r\n    getImage(status) {\r\n      const images = require.context(\"../assets\", false, /\\.png$/);\r\n      return status === 99 ? images(\"./done.png\") : images(\"./progress.png\");\r\n    },\r\n    createSnackBar(message) {\r\n      this.snackbar = true;\r\n      this.text = message;\r\n    },\r\n  },\r\n  \r\n  computed: {\r\n    currentUser() {\r\n      return !!this.$store.state.auth.user;\r\n    },\r\n  },\r\n};\r\n</script>\r\n"],"mappings":";AA0FA,OAAAA,KAAA;AACA,OAAAC,UAAA;AAEA;EACAC,KAAA;IACA;MACAC,OAAA;MACAC,QAAA;MACAC,IAAA;MACAC,OAAA;MACAC,IAAA;MACAC,YAAA;MACAC,UAAA;MACAC,KAAA;MACAC,OAAA;QACAC,QAAA;QACAC,MAAA;QACAC,WAAA;MACA;MACAC,OAAA,GACA;QAAAV,IAAA;QAAAW,KAAA;MAAA,GACA;QAAAX,IAAA;QAAAW,KAAA;MAAA,GACA;QAAAX,IAAA;QAAAW,KAAA;MAAA,GACA;QAAAX,IAAA;QAAAW,KAAA;MAAA,GACA;QAAAX,IAAA;QAAAW,KAAA;QAAAC,QAAA;MAAA;IAEA;EACA;EACAC,QAAA;IACA,KAAAC,OAAA;EACA;EACAC,OAAA;IACAC,YAAAC,OAAA;MACA,KAAAf,IAAA,GAAAe,OAAA;MACA,KAAAH,OAAA;IACA;;IACAI,oBAAAC,eAAA;MACA,KAAAhB,YAAA,GAAAgB,eAAA;MACA,KAAAL,OAAA;IACA;;IACAM,iBAAAC,IAAA;MACA,KAAAC,OAAA,CAAAC,IAAA;QACAC,IAAA;QACAC,MAAA;UAAAJ,IAAA,EAAAK,IAAA,CAAAC,SAAA,CAAAN,IAAA;QAAA;MACA;IACA;IACAP,QAAA;MACA,KAAAhB,OAAA;MACAH,KAAA,CACAiC,GAAA;QACAlB,OAAA,EAAAd,UAAA;QACA6B,MAAA;UACAvB,IAAA,OAAAA,IAAA;UACAC,YAAA,OAAAA,YAAA;UACA,QAAAG;QACA;MACA,GACAuB,IAAA,CAAAC,QAAA;QACA,KAAAzB,KAAA,GAAAyB,QAAA,CAAAjC,IAAA,CAAAA,IAAA;QACA,KAAAO,UAAA,GAAA0B,QAAA,CAAAjC,IAAA,CAAAkC,KAAA;MACA,GACAC,KAAA,CAAAC,KAAA;QACA,KAAAC,cAAA,YAAAD,KAAA,CAAAE,OAAA;MACA,GACAC,OAAA;QACA,KAAAtC,OAAA;MACA;IACA;IACAuC,SAAAC,MAAA;MACA,MAAAC,MAAA,GAAAC,OAAA,CAAAC,OAAA;MACA,OAAAH,MAAA,UAAAC,MAAA,iBAAAA,MAAA;IACA;IACAL,eAAAC,OAAA;MACA,KAAApC,QAAA;MACA,KAAAC,IAAA,GAAAmC,OAAA;IACA;EACA;EAEAO,QAAA;IACAC,YAAA;MACA,cAAAC,MAAA,CAAAC,KAAA,CAAAC,IAAA,CAAAC,IAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}